name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build plugin
        run: npm run build
      - name: Create manifest.json
        run: |
          echo '{
            "id": "markdown-master",
            "name": "Markdown Master",
            "version": "${{ github.ref_name }}",
            "minAppVersion": "0.15.0",
            "description": "一键格式化Markdown文件，提供预览和撤销功能",
            "author": "您的名字",
            "authorUrl": "https://github.com/您的GitHub用户名",
            "isDesktopOnly": false
          }' > manifest.json
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
            --draft \
            --title "Release $TAG" \
            --generate-notes
      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          assets=("main.js" "manifest.json" "styles.css")
          for asset in "${assets[@]}"; do
            gh release delete-asset "${{ github.ref_name }}" "$asset" --yes || true
            gh release upload "${{ github.ref_name }}" "$asset"
          done
      - name: Check for manifest.json
        run: |
          if [ ! -f manifest.json ]; then
            echo "manifest.json does not exist"
            exit 1
          fi